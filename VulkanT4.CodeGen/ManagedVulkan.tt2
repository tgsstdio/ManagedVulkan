<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="VulkanT4" #>
<#@ assembly name="$(SolutionDir)Lib\VulkanT4.dll" #>
<#@ output extension=".cpp" #>
<#

var entitiesXml = "vk.xml";

var doc = XDocument.Load(Host.ResolvePath(entitiesXml), LoadOptions.PreserveWhitespace);

var generator = new VulkanT4.VkAPIGenerator();
generator.Apply(doc);

var ns = "ManagedVulkan";
#>
// This is the main DLL file.
#include <vulkan/vulkan.h>
#include "ManagedVulkan.h"

<#	
	foreach (var proxy in generator.Proxies.Values)
	{
#>
// <#= proxy.Key #>
<#
		foreach (var m in proxy.Methods)
		{
			var returnType = m.Function.ReturnType ?? "<RETURN_TYPE>";
#>
<#= returnType #> <#= ns #>::<#= proxy.Name #>::<#= m.Name #>(<#
			var first = true;
			var separator = "";
			foreach(var param in m.Parameters)
			{ 
				var paramName = param.Name ?? "<NAME>";
				var paramType = param.CppType ?? "<TYPE>";
			#><#= separator #><#= paramType #> <#= paramName #><#
				if (first)
				{
					separator = ", ";
					first = false;
				}	
			} #>)
{

}

<#
		}
	}
#>
