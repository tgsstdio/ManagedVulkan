<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="VulkanT4" #>
<#@ assembly name="$(SolutionDir)Lib\VulkanT4.dll" #>
<#@ output extension=".h" #>
<#

var entitiesXml = "vk.xml";

var doc = XDocument.Load(Host.ResolvePath(entitiesXml), LoadOptions.PreserveWhitespace);

var generator = new VulkanT4.VkAPIGenerator();
generator.Apply(doc);

var ns = "ManagedVulkan";
#>
// ManagedVulkan.h

#pragma once

#include <vulkan\vulkan.h>

using namespace System;

namespace <#= ns #> 
{
	// HANDLES
<#	foreach(var h in generator.Handles.Values)
	{
#>
	public ref class <#= h.Name #>
	{
	internal:
		<#= h.Key #> mHandle;
	};

<#
	}
#>

	// DELEGATES
<#	foreach(var del in generator.Delegates)
	{
#>
	public delegate void <#= del.Key #>(<#
			var first = true;
			var separator = "";
			foreach(var param in del.Parameters)
			{ 
				var paramName = param.Name ?? "<NAME>";
				var paramType = param.Translation != null ? param.Translation.MethodOnly : (param.CppType ?? "<TYPE>");	

			#><#= separator #><#= paramType #> <#= paramName #><#
				if (first)
				{
					separator = ", ";
					first = false;
				}	
			} #>);

<#
	}
#>
}